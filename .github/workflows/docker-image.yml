name: Harpoon Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag quay.io/harpoon/harpoon-amd:latest
    
      - name: Export image
        run: docker save -o /tmp/harpoon.tar quay.io/harpoon/harpoon-amd:latest

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: harpoon-image
          path: /tmp/harpoon.tar

  raw-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
  
      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v ./examples/config.json:/opt/config.json -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: verify container is running
        run: if [[ $(sudo podman ps -l | grep -v CON= | grep colors | wc -l) = "1" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: Print the current running container
        run: sudo podman ps -l

  push-to-registry:
    runs-on: ubuntu-latest
    needs: [ build, raw-validate ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: docker load -i /tmp/harpoon.tar

      - name: push image
        run: docker push quay.io/harpoon/harpoon-amd:latest

  build-arm-and-push:
    runs-on: ubuntu-latest
    if: > 
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install required packages
        run: sudo apt install build-essential qemu-user qemu-user-static  
        
      - name: Build the Docker image
        run: buildah bud --arch arm64 . quay.io/harpoon/harpoon-arm:latest

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: podman load -i /tmp/harpoon.tar

      - name: push image
        run: podman push quay.io/harpoon/harpoon-arm:latest

      - name: create manifest
        run: podman manifest create quay.io/harpoon/harpoon:latest

      - name: add arm image
        run: |
          podman manifest add quay.io/harpoon/harpoon:latest quay.io/harpoon/harpoon-arm:latest --arch arm64
          podman manifest add quay.io/harpoon/harpoon:latest quay.io/harpoon/harpoon-amd:latest --arch amd64
          podman manifest push quay.io/harpoon/harpoon:latest
        
