name: Harpoon Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install required packages
        run: sudo apt install curl
      
      - name: Enable ubi9-beta images
        run:  |
          curl -O https://www.redhat.com/security/data/f21541eb.txt \
          sudo podman image trust set -f ./f21541eb.txt registry.access.redhat.com/ubi9-beta \
          sudo podman image trust set -f ./f21541eb.txt registry.access.redhat.com/rhel9-beta

      - name: Build the image
        run: go mod tidy && go mod vendor && docker build . --file Dockerfile --tag quay.io/harpoon/harpoon-amd:latest
    
      - name: Export image
        run: docker save -o /tmp/harpoon.tar quay.io/harpoon/harpoon-amd:latest

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: harpoon-image
          path: /tmp/harpoon.tar

  build-ansible-amd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the image
        run: go mod tidy && go mod vendor && make build-ansible-cross-build-linux-amd64

      - name: docker list images
        run: docker images

      - name: Export image
        run: podman save -o /tmp/ansible-amd.tar quay.io/harpoon/harpoon-ansible-amd:latest

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ansible-image-amd
          path: /tmp/ansible-amd.tar

  build-ansible-arm:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - uses: actions/checkout@v2

      - name: update system
        run: sudo apt-get update

      - name: Install required packages
        run: sudo apt install podman build-essential qemu-user qemu-user-static

      - name: Build the image
        run: go mod tidy && go mod vendor && CTR_CMD=podman make build-ansible-cross-build-linux-arm64

      - name: Export image
        run: podman save -o /tmp/ansible-arm.tar quay.io/harpoon/harpoon-ansible-arm:latest

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ansible-image-arm
          path: /tmp/ansible-arm.tar
  
  raw-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v ./examples/raw-config.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: verify container is running
        run: if [[ $(sudo podman ps | grep -v CON= | grep colors | wc -l) = "2" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: Print the current running container
        run: sudo podman ps

  default-volume-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
  
      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v ./examples/default-volume.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: verify container is running
        run: if [[ $(sudo podman ps | grep -v CON= | grep colors | wc -l) = "2" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: Print the current running container
        run: sudo podman ps

      - name: verify harpoon-volume is volume name
        run: if [[ $(sudo podman volume inspect harpoon-volume) ]] ; then echo "Harpoon successfully used default volume name"; else exit 1; fi


  filetransfer-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2

      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar

      - name: Create destination directory
        run: sudo mkdir /tmp/ft

      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-amd:latest quay.io/harpoon/harpoon:latest

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/filetransfer-config.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest

      - name: Wait for harpoon to deploy
        run: sleep 2m

      - name: Logs
        run: sudo podman logs harpoon

      - name: list files
        run: sudo ls /tmp/ft/anotherfile.txt  /tmp/ft/hello.txt

      - name: ensure systemd container is gone
        run: sudo podman ps -a

  filetransfer-validate-exact-file:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2

      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar

      - name: Create destination directory
        run: sudo mkdir -p /tmp/ft/single

      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-amd:latest quay.io/harpoon/harpoon:latest

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/filetransfer-config-single-file.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest

      - name: Wait for harpoon to deploy
        run: sleep 2m

      - name: Logs
        run: sudo podman logs harpoon

      - name: list files
        run: sudo ls /tmp/ft/single/hello.txt

      - name: ensure systemd container is gone
        run: sudo podman ps -a

  systemd-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
  
      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-amd:latest quay.io/harpoon/harpoon:latest

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/systemd-config.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: list files
        run: sudo ls /etc/systemd/system/httpd.service

      - name: ensure systemd container is gone
        run: sudo podman ps -a

  systemd-validate-exact-file:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
 
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
 
      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-amd:latest quay.io/harpoon/harpoon:latest

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/systemd-config-single-file.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
 
      - name: Wait for harpoon to deploy
        run: sleep 2m
 
      - name: Logs
        run: sudo podman logs harpoon

      - name: list files
        run: sudo ls /etc/systemd/system/httpd.service

      - name: ensure systemd container is gone
        run: sudo podman ps -a

  kube-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
  
      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v ./examples/kube-play-config.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: verify container is running
        run: if [[ $(sudo podman pod ps | grep -v CON= | grep colors_pod | wc -l) = "1" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: Print the current running container
        run: sudo podman ps

  multi-engine-validate:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      
      - name: ssh-keygen
        run: sudo ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N ""

      - name: cp pub into authorized
        run: sudo cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Create destination directory
        run: sudo mkdir /tmp/ft

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar

      - name: Pull ansible artifact
        uses: actions/download-artifact@v1
        with:
          name: ansible-image-amd
          path: /tmp

      - name: Load the ansible image
        run: sudo podman load -i /tmp/ansible-amd.tar

      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-ansible-amd:latest quay.io/harpoon/harpoon-ansible:latest 
  
      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/full-suite.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest
        
      - name: Wait for harpoon to deploy
        run: sleep 2m
        
      - name: Logs
        run: sudo podman logs harpoon

      - name: list systemd files
        run: sudo ls /etc/systemd/system/httpd.service

      - name: list transferred files
        run: sudo ls /tmp/ft/hello.txt /tmp/ft/anotherfile.txt

      - name: ensure systemd container is gone
        run: sudo podman ps -a

      - name: verify container is running
        run: if [[ $(sudo podman pod ps | grep -v CON= | grep colors_pod | wc -l) = "1" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: Print the current running container
        run: sudo podman ps      

      - name: verify raw container is running
        run: if [[ $(sudo podman ps | grep -v CON= | grep colors | wc -l) = "2" ]] ; then echo "Container successfully launched"; else exit 1; fi

      - name: list packages
        run: sudo apt list --installed | grep zsh

  ansible-validate:
    runs-on: ubuntu-latest
    needs: [ build, build-ansible-amd ]
    steps:
      - uses: actions/checkout@v2

      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: ssh-keygen
        run: sudo ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N ""

      - name: cp pub into authorized
        run: sudo cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar
  
      - name: Pull ansible artifact
        uses: actions/download-artifact@v1
        with:
          name: ansible-image-amd
          path: /tmp

      - name: Load the ansible image
        run: sudo podman load -i /tmp/ansible-amd.tar

      - name: tag the image
        run: sudo podman tag quay.io/harpoon/harpoon-ansible-amd:latest quay.io/harpoon/harpoon-ansible:latest 

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v ./examples/ansible.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest

      - name: Wait for harpoon to deploy
        run: sleep 2m
      
      - name: Logs
        run: sudo podman logs harpoon
      
      - name: list packages
        run: sudo apt list --installed | grep zsh

  make-change-to-repo:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3
        with:
          path: main
      - uses: actions/checkout@v3
        with:
          path: ci
          ref: ci

      - name: Enable the podman socket
        run: sudo systemctl enable --now podman.socket

      - name: ensure value and commit
        run: |
          if [[ $( grep pink ./ci/examples/raw/color1.json | wc -l ) = "1" ]] ; then
            cat <<< $(jq '.Env.APP_COLOR |= "blue"' ./ci/examples/raw/color1.json) > ./ci/examples/raw/color1.json 
            cd ci
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -m "color changes" -a
            git push -f
          fi

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: sudo podman load -i /tmp/harpoon.tar

      - name: set values relating to the current env
        run: | 
          sed -i 's|  url: http://github.com/redhat-et/harpoon|  url: http://github.com/${{ github.repository }}|g' /home/runner/work/harpoon/harpoon/main/examples/ci-config.yaml
          sed -i 's|   branch: ci|  branch: "{{ github.ref }}"|g' /home/runner/work/harpoon/harpoon/main/examples/ci-config.yaml

      - name: Start harpoon
        run: sudo podman run -d --name harpoon -v harpoon-volume:/opt -v /home/runner/work/harpoon/harpoon/main/examples/ci-config.yaml:/opt/config.yaml -v /run/podman/podman.sock:/run/podman/podman.sock quay.io/harpoon/harpoon-amd:latest

      - name: Wait for harpoon to deploy
        run: sleep 2m

      - name: Logs
        run: sudo podman logs harpoon

      - name: get environment variable
        run: sudo podman exec colors1 env | grep APP_COLOR

      - name: update variable
        run: |
          cat <<< $(jq '.Env.APP_COLOR |= "pink"' ./ci/examples/raw/color1.json) > ./ci/examples/raw/color1.json 

      - name: Commit files
        run: |
          cd ci
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -m "color changes" -a
            git push -f

      - name: Wait for harpoon to deploy
        run: sleep 2m

      - name: Logs
        run: sudo podman logs harpoon

      - name: get environment variable
        run: sudo podman exec colors1 env | grep APP_COLOR

  push-amd-image-to-registry:
    runs-on: ubuntu-latest
    needs: [ build, raw-validate, default-volume-validate, kube-validate, systemd-validate, systemd-validate-exact-file, multi-engine-validate, make-change-to-repo, filetransfer-validate, filetransfer-validate-exact-file, ansible-validate ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the image
        run: docker load -i /tmp/harpoon.tar

      - name: push image
        run: docker push quay.io/harpoon/harpoon-amd:latest

  build-arm-and-manifest-list:
    runs-on: ubuntu-latest
    needs: [ build, raw-validate, default-volume-validate, kube-validate, systemd-validate, systemd-validate-exact-file, multi-engine-validate, make-change-to-repo, filetransfer-validate, filetransfer-validate-exact-file, ansible-validate ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: update system
        run: sudo apt-get update

      - name: Install required packages
        run: sudo apt install podman build-essential qemu-user qemu-user-static  

      - name: Build the arm image
        run: go mod tidy && go mod vendor && CTR_CMD=podman make build-containerized-cross-build-linux-arm64

      - name: Export image
        run: podman save -o /tmp/harpoon-arm.tar quay.io/harpoon/harpoon-arm:latest

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: harpoon-arm-image
          path: /tmp/harpoon-arm.tar

      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the amd image
        run: podman load -i /tmp/harpoon.tar

      - name: pull arm artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-arm-image
          path: /tmp

      - name: Load the arm image
        run: podman load -i /tmp/harpoon-arm.tar

      - name: create manifest
        run: podman manifest create quay.io/harpoon/harpoon:latest

      - name: add images to manifest list
        run: |
          podman manifest add --arch arm64 quay.io/harpoon/harpoon:latest docker://quay.io/harpoon/harpoon-arm:latest
          podman manifest add quay.io/harpoon/harpoon:latest docker://quay.io/harpoon/harpoon-amd:latest

  push-manifest-list-to-registry:
    runs-on: ubuntu-latest
    needs: [ build, raw-validate, default-volume-validate, kube-validate, systemd-validate, systemd-validate-exact-file, make-change-to-repo, multi-engine-validate, build-arm-and-manifest-list, filetransfer-validate, filetransfer-validate-exact-file ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the amd image
        run: podman load -i /tmp/harpoon.tar

      - name: pull arm artifact
        uses: actions/download-artifact@v1
        with:
          name: harpoon-arm-image
          path: /tmp

      - name: Load the arm image
        run: podman load -i /tmp/harpoon-arm.tar

      - name: create manifest
        run: podman manifest create quay.io/harpoon/harpoon:latest

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: podman login to quay.io
        run: podman login --authfile ~/.docker/config.json quay.io

      - name: add images and push manifest list
        run: |
          podman manifest add --arch arm64 quay.io/harpoon/harpoon:latest docker://quay.io/harpoon/harpoon-arm:latest
          podman manifest add quay.io/harpoon/harpoon:latest docker://quay.io/harpoon/harpoon-amd:latest
          podman manifest push --authfile ~/.docker/config.json quay.io/harpoon/harpoon:latest docker://quay.io/harpoon/harpoon:latest

  publish-binary-to-github:
    runs-on: ubuntu-latest
    needs: [ build-arm-and-manifest-list ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: pull arm image
        uses: actions/download-artifact@v1
        with:
          name: harpoon-arm-image
          path: /tmp

      - name: Load the arm image
        run: podman load -i /tmp/harpoon-arm.tar

      - name: Pull amd image
        uses: actions/download-artifact@v1
        with:
          name: harpoon-image
          path: /tmp

      - name: Load the amd image
        run: podman load -i /tmp/harpoon.tar

      - name: move binary
        run: |
          arm=$(podman images | grep arm | awk '{print $3}')
          amd=$(podman images | grep amd | awk '{print $3}')
          podman cp $(podman create --rm $arm):/usr/local/bin/harpoon ./harpoon-arm
          podman cp $(podman create --rm $amd):/usr/local/bin/harpoon ./harpoon-amd

      - name: push binary
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Build"
          files: |
            harpoon-arm
            harpoon-amd

  create-ansible-manifest:
    runs-on: ubuntu-latest
    needs: [ ansible-validate, build-ansible-arm ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: pull artifact
        uses: actions/download-artifact@v1
        with:
          name: ansible-image-arm
          path: /tmp

      - name: Load the amd image
        run: podman load -i /tmp/ansible-arm.tar

      - name: pull amd artifact
        uses: actions/download-artifact@v1
        with:
          name: ansible-image-amd
          path: /tmp

      - name: Load the arm image
        run: podman load -i /tmp/ansible-amd.tar

      - name: create manifest
        run: podman manifest create quay.io/harpoon/harpoon-ansible:latest

      - name: add images to manifest list
        run: |
          podman manifest add --arch arm64 quay.io/harpoon/harpoon-ansible:latest docker://quay.io/harpoon/harpoon-ansible-arm:latest
          podman manifest add quay.io/harpoon/harpoon-ansible:latest docker://quay.io/harpoon/harpoon-ansible-amd:latest
